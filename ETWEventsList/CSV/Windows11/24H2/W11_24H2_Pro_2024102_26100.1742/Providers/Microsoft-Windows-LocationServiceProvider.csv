Provider,Level,Event ID,Version,Channel,Task,Opcode,Keyword,Message
Microsoft-Windows-LocationServiceProvider,,12,0,Debug,TraceMessage,,Error Selfhost,
Microsoft-Windows-LocationServiceProvider,Error,13,0,Debug,,,Error Selfhost,WER Report: ExInfo[0]={ExInfo0}; ExInfo[1]={ExInfo1}; Result={Result}
Microsoft-Windows-LocationServiceProvider,Information,14,0,Debug,,,Selfhost Init,Init[{Component}; {ComponentMsgId}]: {customString} [{arg1}]
Microsoft-Windows-LocationServiceProvider,Information,15,0,Debug,,,Error Selfhost,hr={Status}; file={Filename}; line={Line}
Microsoft-Windows-LocationServiceProvider,Information,16,0,Debug,,,Error Selfhost,hr={HR}; custommessage={CustomMessage}; function={Function} callingcode={CallingCode} filename={Filename} line={Line}
Microsoft-Windows-LocationServiceProvider,Information,17,0,Debug,,,Error Selfhost,context={context}; component={component}; istakeref={istakeref}
Microsoft-Windows-LocationServiceProvider,Information,100,0,Debug,LocationSession,,Selfhost FixSession ClientApi,LS_REQUEST_LATLON: {Accuracy} {Generate}; hint={hint} error={ErrorCode} 
Microsoft-Windows-LocationServiceProvider,Information,101,0,Debug,LocationSession,,Selfhost Position FixSession ClientApi,LS_REPORT_LATLON: error={ErrorCode}; lat={Latitude}; lon={Longitude}; altitude={Altitude}; hAccuracy={HorizontalAccuracy}; vAccuracy={VerticalAccuracy}; heading={Heading}; velocity={Velocity}
Microsoft-Windows-LocationServiceProvider,Information,200,0,Debug,,,FixSession Gnss,GnssError hr={Result}; eventType={GnssEventType}; numBytesTransferred={NumberOfBytesTransferred}; eventSize={GnssEventSize}
Microsoft-Windows-LocationServiceProvider,Information,201,0,Debug,LocationSession,Start,FixSession Gnss,Gnss[id={SessionId}; Adapter] START {SessionType}: param={RequestParameter}
Microsoft-Windows-LocationServiceProvider,Information,202,0,Debug,LocationSession,Stop,FixSession Gnss,Gnss[id={SessionId}; Adapter] STOP
Microsoft-Windows-LocationServiceProvider,Information,203,0,Debug,LocationSession,Start,FixSession Gnss,Gnss[id={SessionId}; Driver] START {SessionType}: param={RequestParameter}
Microsoft-Windows-LocationServiceProvider,Information,204,0,Debug,LocationSession,Stop,FixSession Gnss,Gnss[id={SessionId}; Driver] STOP
Microsoft-Windows-LocationServiceProvider,Information,205,0,Debug,LocationSession,,Position FixSession Gnss,Gnss[id={SessionId}] POS: {Timestamp}; Intermediate={IsIntermediate}; lat={Latitude}; lon={Longitude}; alt={Altitude}; speed={Speed}; head={Heading}; hAccuracy={SessionId}0; vAccuracy={SessionId}1; speedAcc={SessionId}2; HDOP={SessionId}3; PDOP={SessionId}4; Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,206,0,Debug,LocationSession,Start,FixSession Gnss,Gnss[id={SessionId}; Driver] MOD {SessionType}: param={RequestParameter}
Microsoft-Windows-LocationServiceProvider,Information,207,0,Debug,LocationSession,Start,FixSession Gnss,Gnss[id={SessionId}; Driver] Ioctl={Ioctl}; hr={Result}; Duration={Duration}
Microsoft-Windows-LocationServiceProvider,Information,208,0,Debug,LocationSession,Start,FixSession Gnss,Gnss[id={SessionId}] SAT: {SatelliteData}
Microsoft-Windows-LocationServiceProvider,Information,209,0,Debug,,,FixSession Gnss,Gnss[id={SessionId}; Driver] FixEventError hr={Result}; numBytesTransferred={NumberOfBytesTransferred}; fixlevelofdetails={FixLevelOfDetails}; expectedMinBytes={ExpectedMinimumBytes}; expectedMinSatelliteBytes={ExpectedMinimumSatelliteBytes}
Microsoft-Windows-LocationServiceProvider,Information,210,0,Debug,LocationSession,Start,Selfhost FixSession,Session[{SessionId};{Pe}] START {SessionType}; IsClient={IsClientSession}; Acquire[attached={SessionId}0; owner={SessionId}1]; Age={AgeValue}; {AccuracyType}; AccuracyValue={AccuracyValue}; VenueMandatory={IsVenueMandatory}; Param={RequestParameter}
Microsoft-Windows-LocationServiceProvider,Information,211,0,Debug,LocationSession,Stop,FixSession,Session[{SessionId};{Pe}] STOP: hr={Result}
Microsoft-Windows-LocationServiceProvider,Information,212,0,Debug,LocationSession,,Selfhost Position FixSession,Session[{SessionId};{Pe}] POS: {Timestamp}; Status={Status}; SourcePe={SourcePe}; Intermediate={IsIntermediate}; lat={Latitude}; lon={Longitude}; HAcc={HorizontalAccuracy}; Speed={SessionId}0; Floor={SessionId}1; Venue={SessionId}2
Microsoft-Windows-LocationServiceProvider,Information,213,0,Debug,LocationSession,,Selfhost Position FixSession,Session[{SessionId};{Pe}] CallerName={CallerName}; CallerProductId={ProductId}; Sid={UserSid}; PackageId={PackageId}
Microsoft-Windows-LocationServiceProvider,Information,220,0,Debug,OrionSession,,Selfhost Orion,Orion ServerTime: hr={Result}; Report hr={ReportStatus}; time={Timestamp}
Microsoft-Windows-LocationServiceProvider,Information,221,0,Debug,OrionSession,,Selfhost Orion,Orion Agnss: hr={Result}; Report hr={ReportStatus}; BlobSize={BlobSize}
Microsoft-Windows-LocationServiceProvider,Information,222,0,Debug,OrionSession,,Selfhost Orion,Orion Inference: Winhttp hr={WinHttpResult}; Orion={OrionResult}; lat={Latitude}; lon={Longitude}; Accuracy={Accuracy}
Microsoft-Windows-LocationServiceProvider,Information,230,0,Debug,SuplSession,,Selfhost Supl,SUPL config: hslp={Hslp} (src={HslpSource}); hslp_from_imsi={HslpFromImsi}
Microsoft-Windows-LocationServiceProvider,Information,231,0,Debug,SuplSession,,Selfhost Supl,V2UPL config: MPC={MPC}; PDE={PDE}; AppType={ApplicationType}
Microsoft-Windows-LocationServiceProvider,Information,232,0,Debug,SuplSession,,Selfhost Supl,Set SUPL version: {Major}.{Minor}
Microsoft-Windows-LocationServiceProvider,Information,233,0,Debug,SuplSession,,Selfhost Supl,Cert config: Action={Action}; Name={Name}; Size={Size}
Microsoft-Windows-LocationServiceProvider,Information,234,0,Debug,Initialization,,Selfhost Init Gnss,Driver cmd={CommandType}; value={Value}
Microsoft-Windows-LocationServiceProvider,Information,235,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Inject: type={InjectionType}; status={InjectionStatus}; dataSize={InjectionDataSize}
Microsoft-Windows-LocationServiceProvider,Information,236,0,Debug,Initialization,,Selfhost Init Gnss,NI Request: id={RequestId}; type={RequestType}; NotType={RequestNotificationType}; Plane={RequestPlaneType}
Microsoft-Windows-LocationServiceProvider,Information,237,0,Debug,Initialization,,Selfhost Init Gnss,NI Response: id={RequestId}; response={UserResponse}
Microsoft-Windows-LocationServiceProvider,Information,238,0,Debug,Initialization,,Selfhost Init Gnss,Driver: ForceOperationMode={Value}
Microsoft-Windows-LocationServiceProvider,Information,239,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Request: type={InjectionType} {BlobFormat}
Microsoft-Windows-LocationServiceProvider,Information,240,0,Debug,Initialization,,Selfhost Init Gnss Supl,SUPL Reconfig: Trigger={Trigger}; CurrentRegStatus={RegStatus}
Microsoft-Windows-LocationServiceProvider,Information,241,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Clear: type={InjectionType}
Microsoft-Windows-LocationServiceProvider,Information,242,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Position Inject: status={InjectionStatus}; lat={Latitude}; lon={Longitude}; alt={Altitude}; speed={Speed}; head={Heading}; hAccuracy={hAccuracy}
Microsoft-Windows-LocationServiceProvider,Information,243,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Time Inject: status={InjectionStatus}; Time={UtcTime}; Uncertainty={Uncertainty}
Microsoft-Windows-LocationServiceProvider,Information,244,0,Debug,Initialization,,Selfhost Init Gnss,Agnss Blob Inject: status={InjectionStatus}; Version={BlobVersion}; Format={BlobFormat}; Size={BlobSize}
Microsoft-Windows-LocationServiceProvider,Information,245,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GFAdd Id=[{AppId}:{GeofenceId}]; hwId={ReturnId} hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,246,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GFRemove: hwId={Id}; hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,247,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GFResetTracking: hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,248,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GFEvent: id={Id}; triggerState={State}
Microsoft-Windows-LocationServiceProvider,Information,249,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GFTrackingStatus: state={State}
Microsoft-Windows-LocationServiceProvider,Information,250,0,Debug,CellPE,,Selfhost CellPe,SC GSM MCC={ARFCN}; MNC={BaseStationID}; CID={CellID}; LAC={LocationAreaCode}
Microsoft-Windows-LocationServiceProvider,Information,251,0,Debug,CellPE,,Selfhost CellPe,SC UMTS MCC={MobileCountryCode}; MNC={MobileNetworkCode}; CID={CellID}; LAC={LocationAreaCode}
Microsoft-Windows-LocationServiceProvider,Information,252,0,Debug,CellPE,,Selfhost CellPe,SC CDMA BaseLat={BaseLat}; BaseLong={BaseLong}; BSID={BaseStationID}; NID={NID}; SID={SID}
Microsoft-Windows-LocationServiceProvider,Information,253,0,Debug,CellPE,,Selfhost CellPe,SC LTE MCC={MobileCountryCode}; MNC={MobileNetworkCode}; CID={CellID}
Microsoft-Windows-LocationServiceProvider,Information,254,0,Debug,CellPE,,Selfhost CellPe,Neighbors: {Neighbors}
Microsoft-Windows-LocationServiceProvider,Information,255,0,Debug,CellPE,,Selfhost CellPe,SC TDSCDMA MCC={MobileCountryCode}; MNC={MobileNetworkCode}; LAC={LocationAreaCode}; CID={CellID}
Microsoft-Windows-LocationServiceProvider,Information,256,0,Debug,CellPE,,Selfhost CellPe,[Cell Adapter]Cell Location update noficiation: Parms = {Params}; Exe= {Executor}; UiccApp = {UiccApp}; LAC={LocationAreaCode}; TAC = {TrackingAreaCode}; CID={CellID}
Microsoft-Windows-LocationServiceProvider,Information,257,0,Debug,CellPE,,Selfhost CellPe,[Cell Adapter]Cell Location update notification Error state; hr ={hrResult}
Microsoft-Windows-LocationServiceProvider,Information,258,0,Debug,CellPE,,Selfhost CellPe,Neighbors Used: {NeighborsBeaconHash}
Microsoft-Windows-LocationServiceProvider,Verbose,259,0,Debug,CellPEAdvance,,Selfhost CellPe,IsMulticellUsed={IsMulticellUsed}
Microsoft-Windows-LocationServiceProvider,Verbose,260,0,Debug,WiFiAdapter,,WiFiTracing,Mac Address={MacAddress}; Signal Strength={SignalStrength}
Microsoft-Windows-LocationServiceProvider,Information,261,0,Debug,WiFiAdapter,,Selfhost WiFiTracing,Wifi Change: Name={Name}; State={State}
Microsoft-Windows-LocationServiceProvider,Information,262,0,Debug,WiFiAdapter,,WiFiTracing,Wifi MACs:{MacAddresses}
Microsoft-Windows-LocationServiceProvider,Information,265,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt GnssError Error={Status}; Recoverable={IsRecoverable}; Description={Description}
Microsoft-Windows-LocationServiceProvider,Information,266,0,Debug,Initialization,,Selfhost Init Gnss,GnssAdapt DeviceAvailable = {DeviceAvailable}; SymbolicLink={SymbolicLink}; DeviceInUse={DeviceInUse}; hr= {hr}
Microsoft-Windows-LocationServiceProvider,Information,267,0,Debug,Initialization,,Selfhost Init Gnss,GnssPnPManager Device Arrival SymbolicLink= {SymbolicLink}; IsExternal={IsExternal}
Microsoft-Windows-LocationServiceProvider,Information,268,0,Debug,Initialization,,Selfhost Init Gnss,GnssPnPManager Device Removal SymbolicLink= {SymbolicLink}; IsExternal={IsExternal}
Microsoft-Windows-LocationServiceProvider,Information,269,0,Debug,Initialization,,Selfhost Init Gnss,GnssPnPManager Retrying for SymbolicLink= {SymbolicLink}
Microsoft-Windows-LocationServiceProvider,Information,270,0,Debug,CommonPE,,Selfhost CellPe WifiPe,Server Cache IsHit={Result}; PE={PE}
Microsoft-Windows-LocationServiceProvider,Information,271,0,Debug,CommonPE,,Selfhost CellPe WifiPe,Tile Cache IsHit={Result}; PE={PE}
Microsoft-Windows-LocationServiceProvider,Information,272,0,Debug,CommonPE,,Selfhost CellPe WifiPe,{AdapterName} Scan: Result={Result}
Microsoft-Windows-LocationServiceProvider,Information,273,0,Debug,VenuePE,,Selfhost VenuePE,[VenuePE] Id=[{RequestId}]; Positions:[{CachedPositions}]
Microsoft-Windows-LocationServiceProvider,Information,274,0,Debug,VenuePE,,Selfhost VenuePE,[VenuePE] IsInsideVenue={IsInsideVenue}; Pos[Lat={Lat};Lon={Lon};Acc={Acc};Source={SourcePe}]
Microsoft-Windows-LocationServiceProvider,Information,280,0,Debug,Crowdsource,,Selfhost Crowdsource,[CS]InitializeDcpProfile: DcpProfile={DcpProfile}; hr={Result}
Microsoft-Windows-LocationServiceProvider,Information,281,0,Debug,Crowdsource,,Selfhost Crowdsource,[CS]SubmitData: SizeInBytes={SizeInBytes}; DcpProfile={DcpProfile}; hr={Result}
Microsoft-Windows-LocationServiceProvider,Verbose,282,0,Debug,Crowdsource,,Selfhost Crowdsource,[CS]DataReceived: SourcePE={SourcePE}; IsReadyForData={IsReadyForData}; IsValidData={IsValidData}; hr={Result}
Microsoft-Windows-LocationServiceProvider,Verbose,283,0,Debug,Crowdsource,,Selfhost Crowdsource,[CS]RawDataProcessing begins: DataListSize ={rawDataListSize}; IsCollectionActive={IsCollectionStateActive}
Microsoft-Windows-LocationServiceProvider,Information,284,0,Debug,Crowdsource,,Selfhost Crowdsource,[CS]State: Level={Level}; CollectionType={CollectionType}; IsBufferFull={IsBufferFull} IsBatterySavings={IsBatterySavings} IsUserPresenceOn={IsUserPresenceOn}
Microsoft-Windows-LocationServiceProvider,Verbose,290,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={AcquireId}; Cpe] SelectedPes: PrimaryPe={PrimaryPE}
Microsoft-Windows-LocationServiceProvider,Verbose,291,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={AcquireId}; Cpe] StartPrimitivePes with Role={PeRole}; Remaining time={RemainingTime}; hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,292,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={AcquireId}; Cpe] AttemptFallback with best available position Status={Status}; Sourcepe={SourcePe}; AccuracyValue={Accuracy}
Microsoft-Windows-LocationServiceProvider,Information,294,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={DistanceThreshold}4; Cpe] DT: Wait: Dist(m)={DistanceThreshold}; IsSpeedUnknown={DistanceThreshold}2; SpeedUsed(m/s)={Speed}; IsMDUsed={MDUsed}; MDPrecision(m)={MovementPrecision}; Speed_Wait(s)={SpeedBasedWaitTimeSec}; MD_Wait(s)={MDBasedWaitTimeSec}; MinWait_Budget(s)={MinWaitTimeToMeetBudgetSec}; SelectedWait(s)={SelectedWaitTimeSec}; TimeBoundApplied={DistanceThreshold}3 {Cumulative Runningtime(s)={CumulativeRunningTimeSec}; Acqtime(s)={DistanceThreshold}0; Requests={DistanceThreshold}1}
Microsoft-Windows-LocationServiceProvider,Verbose,295,0,Debug,CompositePE,,SpeedEstimatorTracing,[Cpe] New SpeedEstimate Speed(m/s)={SpeedEstimate}; Bearing={Bearing}; Positions={NumberOfPositions}
Microsoft-Windows-LocationServiceProvider,Verbose,296,0,Debug,CompositePE,,SpeedEstimatorTracing,[Cpe] SpeedEstimate Input: Timestamp={Timestamp}; Latitude={Latitude}; Longitude={Longitude}; Accuracy={hAccuracy}
Microsoft-Windows-LocationServiceProvider,Information,298,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={AcquireId}; Cpe] Unreliable position {acc={UnreliablePositionAccuracy}; sourcepe={UnreliablePositionSourcePe}} detected on validation with position{acc={ReliablePositionAccuracy}; sourcepe={ReliablePositionSourcePe}} 
Microsoft-Windows-LocationServiceProvider,Information,299,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] TotalPeCount={PeCount}; AvailPes=[{Pe1};{Pe2};{Pe3};{Pe4};{Pe5};{Pe6}]
Microsoft-Windows-LocationServiceProvider,Information,300,0,Debug,WebproxyRequest,,Selfhost Orion WebproxyTracing,[{RequestId}] [{RequestType}]; URL={Endpoint}; TrackingId={TrackingId}
Microsoft-Windows-LocationServiceProvider,Information,301,0,Debug,WebproxyResponse,,Selfhost Orion WebproxyTracing,[{RequestId}] [{RequestType}]: Coordinate=[{Latitude}; {Longitude}]; Acc={Accuracy}; Floor={Floor}; VenueId={VenueId}; ServerStatus=[{ServerStatus}]; WinHttpStatus=[{MappedHResult}]; ProtocolStatus=[{RequestId}1]; OrionSource=[{RequestId}2]
Microsoft-Windows-LocationServiceProvider,Information,303,0,Debug,WebproxyResponse,,Selfhost Orion WebproxyTracing,[{RequestId}] [{RequestType}]: ServerStatus=[{ServerStatus}]; WinHttpStatus=[{MappedHResult}]; ProtocolStatus=[{StatusString}]
Microsoft-Windows-LocationServiceProvider,Information,304,0,Debug,WebproxyResponse,,Selfhost Orion WebproxyTracing,[{RequestId}] [{RequestType}]: ServerStatus=[{ServerStatus}]; WinHttpStatus=[{MappedHResult}]; ProtocolStatus=[{StatusString}]
Microsoft-Windows-LocationServiceProvider,Information,306,0,Debug,Canceled,,Selfhost Orion WebproxyTracing,[{RequestId}] [{RequestType}] Canceled By [{Reason}]; Status=[{Status}]
Microsoft-Windows-LocationServiceProvider,Verbose,307,0,Debug,WinHttpEvent,,WebproxyTracing,[{WebproxyRequestId}]: Request=[{WebproxyRequestType}]; WinhttpHandle=[{WinHttpHandle}]; WinHttpEvent=[{WinHttpEventType}]; Status=[{WinhttpCallbackStatus}]
Microsoft-Windows-LocationServiceProvider,Verbose,308,0,Debug,WinHttpAPICall,,WebproxyTracing,[{WebproxyRequestId}]: Request=[{WebproxyRequestType}]; WinhttpHandle=[{WinHttpHandle}]; WinHttpAPI=[{WinHttpApiType}]; Status=[{Status}]
Microsoft-Windows-LocationServiceProvider,Verbose,309,0,Debug,WebproxyRequestInfo,,WebproxyTracing,Request=[{Payload}]
Microsoft-Windows-LocationServiceProvider,Verbose,310,0,Debug,WebproxyResponseInfo,,WebproxyTracing,Response=[{Payload}]
Microsoft-Windows-LocationServiceProvider,Information,311,0,Debug,SuplSession,,Selfhost Supl,Set SUPL version: {Major}.{Minor}.{ServInd}
Microsoft-Windows-LocationServiceProvider,Information,401,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] MD: Start MD; hr={hr}; hrwifi={hrWifiRegistration}; hrcell={hrCellRegistration}; wifi{ConnState={WifiConnectionState}; ThrottlingOn={WifiThrottlingOn}; Elapsedtime(s)={WifiThrottlingOnElapsedTimeSec}}; cell{ThrottlingOn={CellThrottlingOn}; Elapsedtime(s)={CellThrottlingOnElapsedTimeSec}} ActivityDetection{ThrottlingOn={ActivityDetectionThrottlingOn}; Elapsedtime(s)={hr}0}
Microsoft-Windows-LocationServiceProvider,Information,402,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] MD: Stop MD; hr ={hr} 
Microsoft-Windows-LocationServiceProvider,Information,403,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] MD: Notify potential movement; hr ={hr} 
Microsoft-Windows-LocationServiceProvider,Information,404,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] MD: Notify state changed; hr ={hr} 
Microsoft-Windows-LocationServiceProvider,Information,405,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] MD: Get movementPrecision hr={hr}; wifi{ConnState={WifiConnectionState}; ThrottlingOn={WifiThrottlingOn}; Elapsedtime={WifiThrottlingOnElapsedTimeSec}}; cell{ThrottlingOn={CellThrottlingOn}; Elapsedtime={CellThrottlingOnElapsedTimeSec}} AD={ThrottlingOn={ADThrottlingOn}; Elapsedtime={ADThrottlingOnElapsedTimeSec}}
Microsoft-Windows-LocationServiceProvider,Information,406,0,Debug,CompositePE,,Selfhost CompositePe,Acquire[Id={AcquireId}; Cpe] StartTracking on Pe={PeName}; IsPrimaryNativeTracking={IsPrimaryNativeTracking}
Microsoft-Windows-LocationServiceProvider,Information,407,0,Debug,CompositePE,,Selfhost CompositePe,[Cpe] SessionType={SessionType}; IsSupportsNativePT={IsSupportsNativePT}; IsSupportsNativeDT={IsSupportsNativeDT}; IsSupportsRequest={IsSupportsRequest}
Microsoft-Windows-LocationServiceProvider,Information,500,0,Debug,Geolocation,,Selfhost FixSession ClientApi,GeolocationStartOperation[{GeolocationClass}] SessionType={SessionType}; Age(ms)={AgeValue}; Accuracy(m)={AccuracyValue}; RequestParameter={RequestParameter}
Microsoft-Windows-LocationServiceProvider,Information,501,0,Debug,Geolocation,,Selfhost FixSession ClientApi,GeolocationStartOperation[{GeolocationClass}] Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,502,0,Debug,Geolocation,,Selfhost Position FixSession ClientApi,GeolocationEventHandler[{GeolocationClass}] PositionStatus={PositionStatus}; Latitude={Latitude}; Longitude={Longitude}; HAccuracy={HorizontalAccuracy}; Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,503,0,Debug,Geolocation,,Selfhost Position FixSession ClientApi,GeolocationStopTrackingOperation[{Geolocator}] Status={Status}
Microsoft-Windows-LocationServiceProvider,Verbose,504,0,Debug,Geolocation,,ClientApi,GeolocationPromptAppState State={State}
Microsoft-Windows-LocationServiceProvider,Information,525,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Add Geofence at Index = {Index}; Lat={Latitude}; Lon={Longitude}; Radius ={Radius}; Starttime={StartTime}; Duration={Duration}; Dwelltime={DwellTime}; SingleUse={SingleUse}
Microsoft-Windows-LocationServiceProvider,Information,526,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Remove Geofence at Index = {Index}; Lat={Latitude}; Lon={Longitude}; Radius ={Radius}; Starttime={StartTime}; Duration={Duration}; Dwelltime={DwellTime}; SingleUse={SingleUse}
Microsoft-Windows-LocationServiceProvider,Information,527,0,Debug,Geofencing,,Selfhost ClientApi,
Microsoft-Windows-LocationServiceProvider,Information,528,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Register for {TriggerType} changes 
Microsoft-Windows-LocationServiceProvider,Information,529,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Unregister for {TriggerType} changes
Microsoft-Windows-LocationServiceProvider,Information,530,0,Debug,Geofencing,,Selfhost ClientApi,
Microsoft-Windows-LocationServiceProvider,Information,531,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Event signalled on client for {TriggerType}
Microsoft-Windows-LocationServiceProvider,Information,532,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Create location trigger 
Microsoft-Windows-LocationServiceProvider,Information,533,0,Debug,Geofencing,,Selfhost ClientApi,GFClient Delete location trigger 
Microsoft-Windows-LocationServiceProvider,Information,534,0,Debug,Geofencing,,Selfhost ClientApi,GFClient  Geofence: Id=[{AppId}:{GeofenceId}] Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Starttime={StartTime}; Duration={Duration}; Dwelltime={DwellTime}; SingleUse={SingleUse} 
Microsoft-Windows-LocationServiceProvider,Information,550,0,Debug,Geofencing,,Selfhost ClientApi,GeofenceOperation[{Operation}] Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,551,0,Debug,Geofencing,,Selfhost ClientApi,GFAppBoundary GeofenceOperation[{Operation}] ClientId={ClientId}; EventId={EventId}; Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,552,0,Debug,Geofencing,,Selfhost,GFAppBoundary {RegistrationOperation} {ForegroundEvent} {TriggerType}Event: PID={ProccessId}; AppId={ApplicationId}; EventId={EventId}; Status={Status}
Microsoft-Windows-LocationServiceProvider,Information,553,0,Debug,Geofencing,,Selfhost,GFAppBoundary  AddGeofence: CallerName={AppId}1; Id=[{AppId}:{GeofenceId}] Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Starttime={StartTime}; Duration={Duration}; Dwelltime={DwellTime}; SingleUse={SingleUse}; hr={AppId}0
Microsoft-Windows-LocationServiceProvider,Information,554,0,Debug,Geofencing,,Selfhost,GFAppBoundary  RemoveGeofence: CallerName={CallerName}; Id=[{AppId}:{GeofenceId}]; hr = {hr}
Microsoft-Windows-LocationServiceProvider,Information,555,0,Debug,Geofencing,,Selfhost,GFAppBoundary  RemoveAllGeofences: CallerName={CallerName}; AppId={AppId}; hr = {hr}
Microsoft-Windows-LocationServiceProvider,Information,556,0,Debug,Geofencing,,Selfhost,GFAppBoundary  ListAllGeofences: AppId={AppId}; GeofencesCount={GeofencesCount}; hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,557,0,Debug,Geofencing,,Selfhost,GFAppBoundary  ReadGeofenceReports: AppId={AppId}; GeofenceReportsCount={GeofenceReportsCount}; hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,558,0,Debug,Geofencing,,Selfhost,GFClient  GeofenceReport: GfId={GeofenceId}; Trigger={Trigger}; RemovalReason={RemovalReason}; Status={PositionStatus}; Lat={Latitude}; Lon={Longitude}; HAcc={Accuracy}
Microsoft-Windows-LocationServiceProvider,Information,559,0,Debug,Geofencing,,Selfhost,GFAppBoundary  ForegroundEventFired ForegroundEventType={WnfForegroundEvent}
Microsoft-Windows-LocationServiceProvider,Information,560,0,Debug,Geofencing,,Selfhost,GFAppBoundary  BackgroundEventSignalled ClientId={ClientId}; EventId={EventId}; hr={hr}
Microsoft-Windows-LocationServiceProvider,Information,600,0,Debug,GCWLogEvent,,Selfhost FixSession ClientApi ManagedApi,GCW: Instance=[{InstanceId}]; Type=[{EventType}]; Source=[{EventSource}]; Taskhost=[{TaskhostSource}]; CurrentState=[{CurrentState}]; Timeout=[{Timeout}]
Microsoft-Windows-LocationServiceProvider,Information,601,0,Debug,GCWStateLogEvent,,Selfhost FixSession ClientApi ManagedApi,GCW: Instance=[{InstanceId}]; GeoStatus=[{GeoStatus}]; GeoPermission=[{GeoPermission}]
Microsoft-Windows-LocationServiceProvider,Information,700,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Trigger: Id=[{AppId}:{GeofenceId}]; Trigger={Trigger}; Lat={Latitude}; Lon={Longitude}
Microsoft-Windows-LocationServiceProvider,Information,701,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG GF State: Tracker={Tracker}; Id=[{AppId}:{GeofenceId}]; State={State}; Lat={Latitude}; Lon={Longitude}
Microsoft-Windows-LocationServiceProvider,Information,702,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,
Microsoft-Windows-LocationServiceProvider,Information,703,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG EndRegionLoad: Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Geofences={NumberOfGeofences}
Microsoft-Windows-LocationServiceProvider,Information,704,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Start tracking for: AppId=[{AppId}]
Microsoft-Windows-LocationServiceProvider,Information,705,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Stop tracking for: AppId=[{AppId}]
Microsoft-Windows-LocationServiceProvider,Information,706,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_{Tracker} Start Tracking: Id=[{AppId}:{GeofenceId}]; Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Dwelltime={DwellTime}ms; Start={StartTime}; Duration={Duration}ms; Singleuse={Tracker}0
Microsoft-Windows-LocationServiceProvider,Information,707,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_{Tracker} Stop Tracking: Id=[{AppId}:{GeofenceId}]
Microsoft-Windows-LocationServiceProvider,Information,708,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_SW Active={Active}; Distance={Distance}; Accuracy={Accuracy}
Microsoft-Windows-LocationServiceProvider,Information,709,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Not Tracking: Id=[{AppId}:{GeofenceId}]; Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Dwelltime={DwellTime}ms; Start={StartTime}; Duration={Duration}ms; Singleuse={SingleUse}
Microsoft-Windows-LocationServiceProvider,Information,710,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Tracker State: Tracker={Tracker}; NewState={State}
Microsoft-Windows-LocationServiceProvider,Information,711,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_{Tracker} Enable={Enabled}
Microsoft-Windows-LocationServiceProvider,Information,712,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Add to Trackers: Id=[{AppId}:{GeofenceId}]; Lat={Latitude}; Lon={Longitude}; Radius={Radius}; Dwelltime={DwellTime}ms; Start={StartTime}; Duration={Duration}ms; Singleuse={SingleUse} {TrackedGeofencesCount={AppId}0;InternalTrackedGeofencesCount={AppId}1}
Microsoft-Windows-LocationServiceProvider,Information,713,0,Debug,GeofenceTracking,,Selfhost GeofenceTracing,TRK_RG Remove from Trackers: Id=[{AppId}:{GeofenceId}] {TrackedGeofencesCount={TrackedGeofencesCount};InternalTrackedGeofencesCount={InternalTrackedGeofencesCount}}
Microsoft-Windows-LocationServiceProvider,Information,800,0,Debug,LocationSession,,Performance Selfhost,Location KPI : [{Scenario}]:  ; TTFF = {TTFF}msec; Accuracy = {Accuracy}m
Microsoft-Windows-LocationServiceProvider,Information,900,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore Add: Id=[{AppId}:{GeofenceId}]; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,901,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore Remove: Id=[{AppId}:{GeofenceId}]; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,902,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore Update: Id=[{AppId}:{GeofenceId}]; TriggerState= {TriggerState}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,903,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore Get Id=[{AppId}:{GeofenceId}]; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,904,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore DeleteAll: AppId={AppId}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,905,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore GetAllGeofence: AppId={AppId}; Count={GeofenceCount} hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,906,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore GetClosestGeofence: Lat={Latitude}; Lon={Longitude}; AppCount={AppCount}; GFCount={GeofenceCount} TransGFCount= {TransitionGeofenceCount}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,907,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore DeleteApp: AppId={AppId}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,908,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore Internal: Messsage={Message}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,909,0,Debug,GeofenceStore,,Selfhost GeofenceStore,GFStore GetAppID: AppContext= {AppContext} AppId={AppId}; hr={hr} 
Microsoft-Windows-LocationServiceProvider,Information,1000,0,Debug,GeofencePower,Start,Performance Selfhost,Location Geofence Power Scenario: [{Scenario}]:  ; Start
Microsoft-Windows-LocationServiceProvider,Information,1001,0,Debug,GeofencePower,Stop,Performance Selfhost,Location Geofence Power Scenario: [{Scenario}]:  ; Stop
Microsoft-Windows-LocationServiceProvider,Information,1100,0,Debug,Permissions,,Selfhost,Permission denied for client = {ClientID}. Unconditional = {UnconditionalPermissions}; Policy = {PolicyPermissions}; LegacyPolicy = {WinLegacyPolicyPermission}; Master = {MasterPermissions}; User = {UserPermissions}; UserLegacyPolicy = {UserWinLegacyPolicyPermissions}; App = {AppPermissions}; is app container = {IsAppContainer}. UserSid = {ClientID}0; Package = {ClientID}1
Microsoft-Windows-LocationServiceProvider,Information,1101,0,Debug,Permissions,,Selfhost,Permission denied because client was not found; client = {ClientID}. User = {UserSid}; Package = {PackageFamilyName}
Microsoft-Windows-LocationServiceProvider,Information,1200,0,Debug,Misc,,Selfhost,
Microsoft-Windows-LocationServiceProvider,Information,1201,0,Debug,Misc,,Selfhost,
Microsoft-Windows-LocationServiceProvider,Information,1250,0,Debug,WifiPE,,Selfhost WiFiTracing WifiPe,WiFiAcquire: Id[0x{PositionId}]; InferenceResult[{InferenceResult}]; PositionSource[{PositionSource}]; PositionStatus[{PositionStatus}]
Microsoft-Windows-LocationServiceProvider,Information,1251,0,Debug,Initialization,,Selfhost Init Gnss Supl,SUPL Reconfig: Trigger={Trigger}; CurrentRegStatus={RegStatus}
